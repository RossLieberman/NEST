# Date Expressions
The date type supports using date math expression when using it in a query/filter
Whenever durations need to be specified, eg for a timeout parameter, the duration can be specified 
The expression starts with an "anchor" date, which can be either now or a date string (in the applicable format) ending with ||. 
It can then follow by a math expression, supporting +, - and / (rounding). 
The units supported are y (year), M (month), w (week), d (day), h (hour), m (minute), and s (second).
as a whole number representing time in milliseconds, or as a time value like `2d` for 2 days. 

Be sure to read the elasticsearch documentation {ref}/mapping-date-format.html#date-math[on this subject here]

You can create simple expressions using any of the static methods on  `DateMath` 

[source, csharp]
----
Expect("now").WhenSerializing(Nest.DateMath.Now);
----
[source, csharp]
----
Expect("2015-05-05T00:00:00").WhenSerializing(Nest.DateMath.Anchored(new DateTime(2015,05, 05)));
----
strings implicitly convert to date maths 

[source, csharp]
----
Expect("now").WhenSerializing<Nest.DateMath>("now");
----
but are lenient to bad math expressions 

[source, csharp]
----
var nonsense = "now||*asdaqwe";
----
[source, csharp]
----
Expect(nonsense).WhenSerializing<Nest.DateMath>(nonsense)
----
the resulting date math will assume the whole string is the anchor 

[source, csharp]
----
.Result(dateMath => ((IDateMath)dateMath)
		.Anchor.Match(
d => d.Should().NotBe(default(DateTime)), 
s => s.Should().Be(nonsense)
		)
	);
----
date's also implicitly convert to simple date math expressions 

[source, csharp]
----
var date = new DateTime(2015, 05, 05);
----
[source, csharp]
----
Expect("2015-05-05T00:00:00").WhenSerializing<Nest.DateMath>(date)
----
the anchor will be an actual DateTime, even after a serialization - deserialization round trip 

[source, csharp]
----
.Result(dateMath => ((IDateMath)dateMath)
	.	Anchor.Match(
d => d.Should().Be(date), 
s => s.Should().BeNull()
		)
	);
----
Ranges can be chained on to simple expressions 

[source, csharp]
----
Expect("now+1d").WhenSerializing(Nest.DateMath.Now.Add("1d"));
----
plural means that you can chain multiple 

[source, csharp]
----
Expect("now+1d-1m").WhenSerializing(Nest.DateMath.Now.Add("1d").Subtract(TimeSpan.FromMinutes(1)));
----
a rounding value can also be chained at the end afterwhich no more ranges can be appended 

[source, csharp]
----
Expect("now+1d-1m/d").WhenSerializing(Nest.DateMath.Now.Add("1d").Subtract(TimeSpan.FromMinutes(1)).RoundTo(Nest.TimeUnit.Day));
----
When anchoring date's we need to append `||` as clear separator between anchor and ranges 

[source, csharp]
----
Expect("2015-05-05T00:00:00||+1d-1m").WhenSerializing(Nest.DateMath.Anchored(new DateTime(2015,05,05)).Add("1d").Subtract(TimeSpan.FromMinutes(1)));
----
plural means that you can chain multiple 


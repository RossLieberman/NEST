[source, csharp]
----
this._cluster = cluster;
this.Calls = cluster.Nodes.ToDictionary(n => n.Uri.Port, v => new State());
this.Calls.Should().ContainKey(requestData.Uri.Port);
var state = this.Calls[requestData.Uri.Port];
var sniffed = Interlocked.Increment(ref state.Sniffed);
var pinged = Interlocked.Increment(ref state.Pinged);
var called = Interlocked.Increment(ref state.Called);
var state = this.Calls[requestData.Uri.Port];
var always = rule.Times.Match(t => true, t => false);
var times = rule.Times.Match(t => -1, t => t);
var always = rule.Times.Match(t => true, t => false);
var times = rule.Times.Match(t => -1, t => t);
this._dateTimeProvider.ChangeTime(rule.Takes);
this._dateTimeProvider.ChangeTime(rule.Takes);
var state = this.Calls[requestData.Uri.Port];
var failed = Interlocked.Increment(ref state.Failures);
var state = this.Calls[requestData.Uri.Port];
var succeeded = Interlocked.Increment(ref state.Successes);
beforeReturn?.Invoke(rule);
var response = new
			{
				name = "Razor Fist",
				cluster_name = "elasticsearch-test-cluster",
				version = new
				{
					number = "2.0.0",
					build_hash = "af1dc6d8099487755c3143c931665b709de3c764",
					build_timestamp = "2015-07-07T11:28:47Z",
					build_snapshot = true,
					lucene_version = "5.2.1"
				},
				tagline = "You Know, for Search"
			};
new ElasticsearchDefaultSerializer().Serialize(response, ms);
----

:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/current

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

[[nested-query-usage]]
== Nested Query Usage

Nested query allows to query nested objects / docs (see {ref_current}/nested.html[nested mapping]).
The query is executed against the nested objects / docs as if they were indexed as separate
docs (they are, internally) and resulting in the root parent doc (or parent nested mapping).

See the Elasticsearch documentation on {ref_current}/query-dsl-nested-query.html[nested query] for more details.

=== Fluent DSL Example

[source,csharp]
----
q
.Nested(c => c
    .Name("named_query")
    .Boost(1.1)
    .InnerHits(i=>i.Explain())
    .Path(p=>p.CuratedTags)
    .Query(nq => nq
        .Terms(t => t
            .Field(f => f.CuratedTags.First().Name)
            .Terms("lorem", "ipsum")
        )
    )
)
----

=== Object Initializer Syntax Example

[source,csharp]
----
new NestedQuery
{
    Name = "named_query",
    Boost = 1.1,
    InnerHits = new InnerHits { Explain = true },
    Path = Field<Project>(p => p.CuratedTags),
    Query = new TermsQuery
    {
        Field = Field<Project>(p => p.CuratedTags.First().Name),
        Terms = new[] { "lorem", "ipsum" }
    }
}
----

[source,javascript]
.Example json output
----
{
  "nested": {
    "_name": "named_query",
    "boost": 1.1,
    "query": {
      "terms": {
        "curatedTags.name": [
          "lorem",
          "ipsum"
        ]
      }
    },
    "path": "curatedTags",
    "inner_hits": {
      "explain": true
    }
  }
}
----

